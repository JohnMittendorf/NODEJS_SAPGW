/*
 * QUnit - A JavaScript Unit Testing Framework
 * 
 * http://docs.jquery.com/QUnit
 *
 * Copyright (c) 2009 John Resig, JÃ¶rn Zaefferer
 * Dual licensed under the MIT (MIT-LICENSE.txt)
 * and GPL (GPL-LICENSE.txt) licenses.
 */
(function(w){var Q={module:function(n,a){c.currentModule=n;g(function(){if(c.currentModule){Q.moduleDone(c.currentModule,c.moduleStats.bad,c.moduleStats.all);}c.currentModule=n;c.moduleTestEnvironment=a;c.moduleStats={all:0,bad:0};Q.moduleStart(n,a);});},asyncTest:function(a,e,b){if(arguments.length===2){b=e;e=0;}Q.test(a,e,b,true);},test:function(a,j,l,n){var o='<span class="test-name">'+a+'</span>',s,z;if(arguments.length===2){l=j;j=null;}if(j&&typeof j==='object'){z=j;j=null;}if(c.currentModule){o='<span class="module-name">'+c.currentModule+"</span>: "+o;}if(!v(c.currentModule+": "+a)){return;}g(function(){s=t({setup:function(){},teardown:function(){}},c.moduleTestEnvironment);if(z){t(s,z);}Q.testStart(a,s);Q.current_testEnvironment=s;c.assertions=[];c.expected=j;var i=x("qunit-tests");if(i){var b=document.createElement("strong");b.innerHTML="Running "+o;var A=document.createElement("li");A.appendChild(b);A.id="current-test-output";i.appendChild(A)}try{if(!c.pollution){k();}s.setup.call(s);}catch(e){Q.ok(false,"Setup failed on "+o+": "+e.message);}});g(function(){if(n){Q.stop();}try{l.call(s);}catch(e){r("Test "+o+" died, exception and test follows",e,l);Q.ok(false,"Died on test #"+(c.assertions.length+1)+": "+e.message);k();if(c.blocking){start();}}});g(function(){try{m();s.teardown.call(s);}catch(e){Q.ok(false,"Teardown failed on "+o+": "+e.message);}});g(function(){try{Q.reset();}catch(e){r("reset() failed, following Test "+o+", exception and reset fn follows",e,reset);}if(c.expected&&c.expected!=c.assertions.length){Q.ok(false,"Expected "+c.expected+" assertions, but "+c.assertions.length+" were run");}var A=0,B=0,C=x("qunit-tests");c.stats.all+=c.assertions.length;c.moduleStats.all+=c.assertions.length;if(C){var D=document.createElement("ol");for(var i=0;i<c.assertions.length;i++){var E=c.assertions[i];var F=document.createElement("li");F.className=E.result?"pass":"fail";F.innerHTML=E.message||"(no message)";D.appendChild(F);if(E.result){A++;}else{B++;c.stats.bad++;c.moduleStats.bad++;}}if(B==0){D.style.display="none";}var b=document.createElement("strong");b.innerHTML=o+" <b style='color:black;'>(<b class='fail'>"+B+"</b>, <b class='pass'>"+A+"</b>, "+c.assertions.length+")</b>";u(b,"click",function(){var H=b.nextSibling,I=H.style.display;H.style.display=I==="none"?"block":"none";});u(b,"dblclick",function(e){var H=e&&e.target?e.target:w.event.srcElement;if(H.nodeName.toLowerCase()=="span"||H.nodeName.toLowerCase()=="b"){H=H.parentNode;}if(w.location&&H.nodeName.toLowerCase()==="strong"){w.location.search="?"+encodeURIComponent(y([H]).replace(/\(.+\)$/,"").replace(/(^\s*|\s*$)/g,""));}});var F=x("current-test-output");F.id="";F.className=B?"fail":"pass";F.removeChild(F.firstChild);F.appendChild(b);F.appendChild(D);if(B){var G=x("qunit-testrunner-toolbar");if(G){G.style.display="block";x("qunit-filter-pass").disabled=null;x("qunit-filter-missing").disabled=null;}}}else{for(var i=0;i<c.assertions.length;i++){if(!c.assertions[i].result){B++;c.stats.bad++;c.moduleStats.bad++;}}}Q.testDone(a,B,c.assertions.length);if(!w.setTimeout&&!c.queue.length){d();}});if(w.setTimeout&&!c.doneTimer){c.doneTimer=w.setTimeout(function(){if(!c.queue.length){d();}else{g(d);}},13);}},expect:function(a){c.expected=a;},ok:function(a,b){b=f(b);Q.log(a,b);c.assertions.push({result:!!a,message:b});},equal:function(a,e,b){p(e==a,a,e,b);},notEqual:function(a,e,b){p(e!=a,a,e,b);},deepEqual:function(a,e,b){p(Q.equiv(a,e),a,e,b);},notDeepEqual:function(a,e,b){p(!Q.equiv(a,e),a,e,b);},strictEqual:function(a,e,b){p(e===a,a,e,b);},notStrictEqual:function(a,e,b){p(e!==a,a,e,b);},raises:function(a,b){try{a();ok(false,b);}catch(e){ok(true,b);}},start:function(){if(w.setTimeout){w.setTimeout(function(){if(c.timeout){clearTimeout(c.timeout);}c.blocking=false;h();},13);}else{c.blocking=false;h();}},stop:function(a){c.blocking=true;if(a&&w.setTimeout){c.timeout=w.setTimeout(function(){Q.ok(false,"Test timed out");Q.start();},a);}}};Q.equals=Q.equal;Q.same=Q.deepEqual;var c={queue:[],blocking:true};(function(){var l=w.location||{search:"",protocol:"file:"},G=l.search.slice(1).split('&');for(var i=0;i<G.length;i++){G[i]=decodeURIComponent(G[i]);if(G[i]==="noglobals"){G.splice(i,1);i--;c.noglobals=true;}else if(G[i].search('=')>-1){G.splice(i,1);i--;}}c.filters=G;Q.isLocal=!!(l.protocol==='file:');})();if(typeof exports==="undefined"||typeof require==="undefined"){t(w,Q);w.QUnit=Q;}else{t(exports,Q);exports.QUnit=Q;}t(Q,{config:c,init:function(){t(c,{stats:{all:0,bad:0},moduleStats:{all:0,bad:0},started:+new Date,updateRate:1000,blocking:false,autostart:true,autorun:false,assertions:[],filters:[],queue:[]});var a=x("qunit-tests"),b=x("qunit-banner"),e=x("qunit-testresult");if(a){a.innerHTML="";}if(b){b.className="";}if(e){e.parentNode.removeChild(e);}},reset:function(){if(w.jQuery){jQuery("#main, #qunit-fixture").html(c.fixture);}},triggerEvent:function(e,a,b){if(document.createEvent){b=document.createEvent("MouseEvents");b.initMouseEvent(a,true,true,e.ownerDocument.defaultView,0,0,0,0,0,false,false,false,false,0,null);e.dispatchEvent(b);}else if(e.fireEvent){e.fireEvent("on"+a);}},is:function(a,o){return Q.objectType(o)==a;},objectType:function(o){if(typeof o==="undefined"){return"undefined";}if(o===null){return"null";}var a=Object.prototype.toString.call(o).match(/^\[object\s(.*)\]$/)[1]||'';switch(a){case'Number':if(isNaN(o)){return"nan";}else{return"number";}case'String':case'Boolean':case'Array':case'Date':case'RegExp':case'Function':return a.toLowerCase();}if(typeof o==="object"){return"object";}return undefined;},begin:function(){},done:function(a,b){},log:function(a,b){},testStart:function(n,a){},testDone:function(n,a,b){},moduleStart:function(n,a){},moduleDone:function(n,a,b){},push:function(a,b,e,i){}});if(typeof document==="undefined"||document.readyState==="complete"){c.autorun=true;}u(w,"load",function(){Q.begin();var o=t({},c);Q.init();t(c,o);c.blocking=false;var a=x("qunit-userAgent");if(a){a.innerHTML=navigator.userAgent;}var b=x("qunit-testrunner-toolbar");if(b){b.style.display="none";var e=document.createElement("input");e.type="checkbox";e.id="qunit-filter-pass";e.disabled=true;u(e,"click",function(){var s=document.getElementsByTagName("li");for(var i=0;i<s.length;i++){if(s[i].className.indexOf("pass")>-1){s[i].style.display=e.checked?"none":"";}}});b.appendChild(e);var l=document.createElement("label");l.setAttribute("for","qunit-filter-pass");l.innerHTML="Hide passed tests";b.appendChild(l);var j=document.createElement("input");j.type="checkbox";j.id="qunit-filter-missing";j.disabled=true;u(j,"click",function(){var s=document.getElementsByTagName("li");for(var i=0;i<s.length;i++){if(s[i].className.indexOf("fail")>-1&&s[i].innerHTML.indexOf('missing test - untested code is broken code')>-1){s[i].parentNode.parentNode.style.display=j.checked?"none":"block";}}});b.appendChild(j);l=document.createElement("label");l.setAttribute("for","qunit-filter-missing");l.innerHTML="Hide missing tests (untested code is broken code)";b.appendChild(l);}var n=x('main')||x('qunit-fixture');if(n){c.fixture=n.innerHTML;}if(c.autostart){Q.start();}});function d(){if(c.doneTimer&&w.clearTimeout){w.clearTimeout(c.doneTimer);c.doneTimer=null;}if(c.queue.length){c.doneTimer=w.setTimeout(function(){if(!c.queue.length){d();}else{g(d);}},13);return;}c.autorun=true;if(c.currentModule){Q.moduleDone(c.currentModule,c.moduleStats.bad,c.moduleStats.all);}var b=x("qunit-banner"),a=x("qunit-tests"),e=['Tests completed in ',+new Date-c.started,' milliseconds.<br/>','<span class="passed">',c.stats.all-c.stats.bad,'</span> tests of <span class="total">',c.stats.all,'</span> passed, <span class="failed">',c.stats.bad,'</span> failed.'].join('');if(b){b.className=(c.stats.bad?"qunit-fail":"qunit-pass");}if(a){var i=x("qunit-testresult");if(!i){i=document.createElement("p");i.id="qunit-testresult";i.className="result";a.parentNode.insertBefore(i,a.nextSibling);}i.innerHTML=e;}Q.done(c.stats.bad,c.stats.all);}function v(n){var i=c.filters.length,a=false;if(!i){return true;}while(i--){var b=c.filters[i],e=b.charAt(0)=='!';if(e){b=b.slice(1);}if(n.indexOf(b)!==-1){return!e;}if(e){a=true;}}return a;}function f(s){s=s===null?"":s+"";return s.replace(/[\&"<>\\]/g,function(s){switch(s){case"&":return"&amp;";case"\\":return"\\\\";case'"':return'\"';case"<":return"&lt;";case">":return"&gt;";default:return s;}});}function p(a,b,e,i){Q.push(a,b,e,i);i=f(i)||(a?"okay":"failed");i='<span class="test-message">'+i+"</span>";e=f(Q.jsDump.parse(e));b=f(Q.jsDump.parse(b));var o=i+', expected: <span class="test-expected">'+e+'</span>';if(b!=e){o+=' result: <span class="test-actual">'+b+'</span>, diff: '+Q.diff(e,b);}c.assertions.push({result:!!a,message:o});}function g(a){c.queue.push(a);if(c.autorun&&!c.blocking){h();}}function h(){var s=(new Date()).getTime();while(c.queue.length&&!c.blocking){if(c.updateRate<=0||(((new Date()).getTime()-s)<c.updateRate)){c.queue.shift()();}else{setTimeout(h,13);break;}}}function k(){c.pollution=[];if(c.noglobals){for(var a in w){c.pollution.push(a);}}}function m(n){var o=c.pollution;k();var a=q(o,c.pollution);if(a.length>0){ok(false,"Introduced global variable(s): "+a.join(", "));c.expected++;}var b=q(c.pollution,o);if(b.length>0){ok(false,"Deleted global variable(s): "+b.join(", "));c.expected++;}}function q(a,b){var e=a.slice();for(var i=0;i<e.length;i++){for(var j=0;j<b.length;j++){if(e[i]===b[j]){e.splice(i,1);i--;break;}}}return e;}function r(a,e,b){if(typeof console!=="undefined"&&console.error&&console.warn){console.error(a);console.error(e);console.warn(b.toString());}else if(w.opera&&opera.postError){opera.postError(a,e,b.toString);}}function t(a,b){for(var e in b){a[e]=b[e];}return a;}function u(e,a,b){if(e.addEventListener){e.addEventListener(a,b,false);}else if(e.attachEvent){e.attachEvent("on"+a,b);}else{b();}}function x(n){return!!(typeof document!=="undefined"&&document&&document.getElementById)&&document.getElementById(n);}Q.equiv=function(){var e;var l=[];var n=[];function s(o,z,a){var b=Q.objectType(o);if(b){if(Q.objectType(z[b])==="function"){return z[b].apply(z,a);}else{return z[b];}}}var z=function(){function o(b,a){if(b instanceof a.constructor||a instanceof b.constructor){return a==b;}else{return a===b;}}return{"string":o,"boolean":o,"number":o,"null":o,"undefined":o,"nan":function(b){return isNaN(b);},"date":function(b,a){return Q.objectType(b)==="date"&&a.valueOf()===b.valueOf();},"regexp":function(b,a){return Q.objectType(b)==="regexp"&&a.source===b.source&&a.global===b.global&&a.ignoreCase===b.ignoreCase&&a.multiline===b.multiline;},"function":function(){var a=l[l.length-1];return a!==Object&&typeof a!=="undefined";},"array":function(b,a){var i,j,A;var B;if(!(Q.objectType(b)==="array")){return false;}B=a.length;if(B!==b.length){return false;}n.push(a);for(i=0;i<B;i++){A=false;for(j=0;j<n.length;j++){if(n[j]===a[i]){A=true;}}if(!A&&!e(a[i],b[i])){n.pop();return false;}}n.pop();return true;},"object":function(b,a){var i,j,A;var B=true;var C=[],D=[];if(a.constructor!==b.constructor){return false;}l.push(a.constructor);n.push(a);for(i in a){A=false;for(j=0;j<n.length;j++){if(n[j]===a[i])A=true;}C.push(i);if(!A&&!e(a[i],b[i])){B=false;break;}}l.pop();n.pop();for(i in b){D.push(i);}return B&&e(C.sort(),D.sort());}};}();e=function(){var i=Array.prototype.slice.apply(arguments);if(i.length<2){return true;}return(function(a,b){if(a===b){return true;}else if(a===null||b===null||typeof a==="undefined"||typeof b==="undefined"||Q.objectType(a)!==Q.objectType(b)){return false;}else{return s(a,z,[b,a]);}})(i[0],i[1])&&arguments.callee.apply(this,i.splice(1,i.length-1));};return e;}();
/**
 * jsDump
 * Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com
 * Licensed under BSD (http://www.opensource.org/licenses/bsd-license.php)
 * Date: 5/15/2008
 * @projectDescription Advanced and extensible data dumping for Javascript.
 * @version 1.0.0
 * @author Ariel Flesler
 * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}
 */
Q.jsDump=(function(){function b(s){return'"'+s.toString().replace(/"/g,'\\"')+'"';};function e(o){return o+'';};function j(a,i,l){var s=A.separator(),o=A.indent(),B=A.indent(1);if(i.join)i=i.join(','+s+B);if(!i)return a+l;return[a,B+i,o+l].join(s);};function n(a){var i=a.length,l=Array(i);this.up();while(i--)l[i]=this.parse(a[i]);this.down();return j('[',l,']');};var z=/^function (\w+)/;var A={parse:function(o,a){var i=this.parsers[a||this.typeOf(o)];a=typeof i;return a=='function'?i.call(this,o):a=='string'?i:this.parsers.error;},typeOf:function(o){var a;if(o===null){a="null";}else if(typeof o==="undefined"){a="undefined";}else if(Q.is("RegExp",o)){a="regexp";}else if(Q.is("Date",o)){a="date";}else if(Q.is("Function",o)){a="function";}else if(o.setInterval&&o.document&&!o.nodeType){a="window";}else if(o.nodeType===9){a="document";}else if(o.nodeType){a="node";}else if(typeof o==="object"&&typeof o.length==="number"&&o.length>=0){a="array";}else{a=typeof o;}return a;},separator:function(){return this.multiline?this.HTML?'<br />':'\n':this.HTML?'&nbsp;':' ';},indent:function(a){if(!this.multiline)return'';var i=this.indentChar;if(this.HTML)i=i.replace(/\t/g,'   ').replace(/ /g,'&nbsp;');return Array(this._depth_+(a||0)).join(i);},up:function(a){this._depth_+=a||1;},down:function(a){this._depth_-=a||1;},setParser:function(a,i){this.parsers[a]=i;},quote:b,literal:e,join:j,_depth_:1,parsers:{window:'[Window]',document:'[Document]',error:'[ERROR]',unknown:'[Unknown]','null':'null',undefined:'undefined','function':function(a){var i='function',l='name'in a?a.name:(z.exec(a)||[])[1];if(l)i+=' '+l;i+='(';i=[i,this.parse(a,'functionArgs'),'){'].join('');return j(i,this.parse(a,'functionCode'),'}');},array:n,nodelist:n,arguments:n,object:function(a){var i=[];this.up();for(var l in a)i.push(this.parse(l,'key')+': '+this.parse(a[l]));this.down();return j('{',i,'}');},node:function(i){var o=this.HTML?'&lt;':'<',l=this.HTML?'&gt;':'>';var s=i.nodeName.toLowerCase(),B=o+s;for(var a in this.DOMAttrs){var C=i[this.DOMAttrs[a]];if(C)B+=' '+a+'='+this.parse(C,'attribute');}return B+l+o+'/'+s+l;},functionArgs:function(a){var l=a.length;if(!l)return'';var i=Array(l);while(l--)i[l]=String.fromCharCode(97+l);return' '+i.join(', ')+' ';},key:b,functionCode:'[code]',attribute:b,string:b,date:b,regexp:e,number:e,'boolean':e},DOMAttrs:{id:'id',name:'name','class':'className'},HTML:false,indentChar:'   ',multiline:false};return A;})();function y(e){var a="",b;for(var i=0;e[i];i++){b=e[i];if(b.nodeType===3||b.nodeType===4){a+=b.nodeValue;}else if(b.nodeType!==8){a+=y(b.childNodes);}}return a;};
/*
 * Javascript Diff Algorithm
 *  By John Resig (http://ejohn.org/)
 *  Modified by Chu Alan "sprite"
 *
 * Released under the MIT license.
 *
 * More Info:
 *  http://ejohn.org/projects/javascript-diff-algorithm/
 *  
 * Usage: QUnit.diff(expected, actual)
 * 
 * QUnit.diff("the quick brown fox jumped over", "the quick fox jumps over") == "the  quick <del>brown </del> fox <del>jumped </del><ins>jumps </ins> over"
 */
Q.diff=(function(){function q(o,n){var a=new Object();var b=new Object();for(var i=0;i<n.length;i++){if(a[n[i]]==null)a[n[i]]={rows:new Array(),o:null};a[n[i]].rows.push(i);}for(var i=0;i<o.length;i++){if(b[o[i]]==null)b[o[i]]={rows:new Array(),n:null};b[o[i]].rows.push(i);}for(var i in a){if(a[i].rows.length==1&&typeof(b[i])!="undefined"&&b[i].rows.length==1){n[a[i].rows[0]]={text:n[a[i].rows[0]],row:b[i].rows[0]};o[b[i].rows[0]]={text:o[b[i].rows[0]],row:a[i].rows[0]};}}for(var i=0;i<n.length-1;i++){if(n[i].text!=null&&n[i+1].text==null&&n[i].row+1<o.length&&o[n[i].row+1].text==null&&n[i+1]==o[n[i].row+1]){n[i+1]={text:n[i+1],row:n[i].row+1};o[n[i].row+1]={text:o[n[i].row+1],row:i+1};}}for(var i=n.length-1;i>0;i--){if(n[i].text!=null&&n[i-1].text==null&&n[i].row>0&&o[n[i].row-1].text==null&&n[i-1]==o[n[i].row-1]){n[i-1]={text:n[i-1],row:n[i].row-1};o[n[i].row-1]={text:o[n[i].row-1],row:i-1};}}return{o:o,n:n};}return function(o,n){o=o.replace(/\s+$/,'');n=n.replace(/\s+$/,'');var a=q(o==""?[]:o.split(/\s+/),n==""?[]:n.split(/\s+/));var s="";var b=o.match(/\s+/g);if(b==null){b=[" "];}else{b.push(" ");}var e=n.match(/\s+/g);if(e==null){e=[" "];}else{e.push(" ");}if(a.n.length==0){for(var i=0;i<a.o.length;i++){s+='<del>'+a.o[i]+b[i]+"</del>";}}else{if(a.n[0].text==null){for(n=0;n<a.o.length&&a.o[n].text==null;n++){s+='<del>'+a.o[n]+b[n]+"</del>";}}for(var i=0;i<a.n.length;i++){if(a.n[i].text==null){s+='<ins>'+a.n[i]+e[i]+"</ins>";}else{var j="";for(n=a.n[i].row+1;n<a.o.length&&a.o[n].text==null;n++){j+='<del>'+a.o[n]+b[n]+"</del>";}s+=" "+a.n[i].text+e[i]+j;}}}return s;}})();})(this);
